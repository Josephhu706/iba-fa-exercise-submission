{"ast":null,"code":"var _jsxFileName = \"/Users/Jolly/Projects/18-typescript/starwars/starwars/src/components/SearchInput.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { csv } from \"d3\";\nimport TextField from \"@mui/material/TextField\";\nimport { Search } from \"@mui/icons-material\";\nimport Button from \"@mui/material/Button\";\nimport SearchResults from \"./SearchResults\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchInput = () => {\n  _s();\n\n  const [sets, setSets] = useState();\n  const [themes, setThemes] = useState();\n  const [search, setSearch] = useState(\"\");\n  const [result, setResult] = useState();\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    csv(\"data/sets.csv\").then(data => setSets(data));\n    csv(\"data/themes.csv\").then(data => {\n      setThemes(data);\n    });\n  }, []);\n\n  const handleChange = event => {\n    setSearch(event.target.value);\n  };\n\n  const searchLego = event => {\n    event.preventDefault();\n\n    if (sets && themes) {\n      let searchIndex = sets.findIndex(row => row.set_id == search);\n      let setsResult = sets[searchIndex];\n\n      if (setsResult) {\n        let themeIndex = themes.findIndex(row => row.id == setsResult.theme_id);\n        let themesResult = themes[themeIndex];\n        console.log(themesResult);\n        setResult({\n          themeName: themesResult.name,\n          name: setsResult.name,\n          year: setsResult.year,\n          num_parts: setsResult.num_parts\n        });\n      } else {\n        setResult(undefined);\n        setError(\"No Results Found\");\n      }\n    }\n\n    setSearch(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: searchLego,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Search\",\n        variant: \"outlined\",\n        value: search,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        endIcon: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 46\n        }, this),\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), result ? /*#__PURE__*/_jsxDEV(SearchResults, {\n      result: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this) : error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchInput, \"Gmnyb6opweZDBwfnmpzAecXiOGM=\");\n\n_c = SearchInput;\nexport default SearchInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchInput\");","map":{"version":3,"names":["React","useState","useEffect","csv","TextField","Search","Button","SearchResults","SearchInput","sets","setSets","themes","setThemes","search","setSearch","result","setResult","error","setError","then","data","handleChange","event","target","value","searchLego","preventDefault","searchIndex","findIndex","row","set_id","setsResult","themeIndex","id","theme_id","themesResult","console","log","themeName","name","year","num_parts","undefined"],"sources":["/Users/Jolly/Projects/18-typescript/starwars/starwars/src/components/SearchInput.tsx"],"sourcesContent":["import React, { useState, useEffect, FormEventHandler, FormEvent } from \"react\";\nimport { csv, DSVRowArray } from \"d3\";\nimport TextField from \"@mui/material/TextField\";\nimport { Search } from \"@mui/icons-material\";\nimport Button from \"@mui/material/Button\";\nimport SearchResults from \"./SearchResults\";\nimport { SearchResult } from \"../models/dataModels\";\n\nconst SearchInput = () => {\n  const [sets, setSets] = useState<DSVRowArray>();\n  const [themes, setThemes] = useState<DSVRowArray>();\n  const [search, setSearch] = useState<string>(\"\");\n  const [result, setResult] = useState<SearchResult>();\n  const [error, setError] = useState<string>(\"\");\n  useEffect(() => {\n    csv(\"data/sets.csv\").then((data) => setSets(data));\n    csv(\"data/themes.csv\").then((data) => {\n      setThemes(data);\n    });\n  }, []);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(event.target.value);\n  };\n\n  const searchLego = (event: FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (sets && themes) {\n      let searchIndex = sets.findIndex((row) => row.set_id == search);\n      let setsResult = sets[searchIndex];\n      if (setsResult) {\n        let themeIndex = themes.findIndex(\n          (row) => row.id == setsResult.theme_id\n        );\n        let themesResult = themes[themeIndex];\n        console.log(themesResult);\n        setResult({\n          themeName: themesResult.name,\n          name: setsResult.name,\n          year: setsResult.year,\n          num_parts: setsResult.num_parts,\n        });\n      } else {\n        setResult(undefined);\n        setError(\"No Results Found\");\n      }\n    }\n    setSearch(\"\");\n  };\n  return (\n    <div>\n      <form onSubmit={searchLego}>\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Search\"\n          variant=\"outlined\"\n          value={search}\n          onChange={handleChange}\n        />\n        <Button variant=\"contained\" endIcon={<Search />} type=\"submit\">\n          Search\n        </Button>\n      </form>\n      {result ? <SearchResults result={result}></SearchResults> : error}\n    </div>\n  );\n};\n\nexport default SearchInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}