{"ast":null,"code":"var _jsxFileName = \"/Users/Jolly/Projects/18-typescript/starwars/starwars/src/components/SearchInput.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { csv } from \"d3\";\nimport setsData from \"sets.csv\";\nimport themesData from \"../data/themes.csv\";\nimport TextField from \"@mui/material/TextField\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport Button from \"@mui/material/Button\";\nimport SearchResults from \"./SearchResults\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SearchInput = () => {\n  _s();\n\n  const [sets, setSets] = useState();\n  const [themes, setThemes] = useState();\n  const [search, setSearch] = useState(\"\");\n  const [result, setResult] = useState();\n  useEffect(() => {\n    csv(setsData).then(data => {\n      console.log(data);\n      setSets(data);\n    });\n    csv(themesData).then(data => {\n      setThemes(data);\n    });\n  }, []);\n\n  const handleChange = event => {\n    setSearch(event.target.value);\n  };\n\n  const searchLego = event => {\n    event.preventDefault();\n\n    if (sets && themes) {\n      let searchIndex = sets.findIndex(row => row.set_id == search);\n      let setsResult = sets[searchIndex];\n      let themeIndex = themes.findIndex(row => row.id == setsResult.theme_id);\n      let themesResult = themes[themeIndex];\n\n      if (themesResult) {\n        setResult({\n          themeName: themesResult.name,\n          set_id: setsResult.set_id,\n          name: setsResult.name,\n          year: setsResult.year,\n          theme_id: setsResult.thene_id,\n          num_parts: setsResult.num_parts\n        });\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: searchLego,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Search\",\n        variant: \"outlined\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        endIcon: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 46\n        }, this),\n        type: \"submit\",\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchResults, {\n      searchResults: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(SearchInput, \"zmro8MjKOS5+5dw2nEKcdCYIw1s=\");\n\n_c = SearchInput;\nexport default SearchInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchInput\");","map":{"version":3,"names":["React","useState","useEffect","csv","setsData","themesData","TextField","SearchIcon","Button","SearchResults","SearchInput","sets","setSets","themes","setThemes","search","setSearch","result","setResult","then","data","console","log","handleChange","event","target","value","searchLego","preventDefault","searchIndex","findIndex","row","set_id","setsResult","themeIndex","id","theme_id","themesResult","themeName","name","year","thene_id","num_parts"],"sources":["/Users/Jolly/Projects/18-typescript/starwars/starwars/src/components/SearchInput.tsx"],"sourcesContent":["import React, { useState, useEffect, FormEventHandler, FormEvent } from \"react\";\nimport { csv, DSVRowArray } from \"d3\";\nimport setsData from \"sets.csv\";\nimport themesData from \"../data/themes.csv\";\nimport TextField from \"@mui/material/TextField\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport Button from \"@mui/material/Button\";\nimport SearchResults from \"./SearchResults\";\nimport { SearchResult } from \"../models/dataModels\";\n\nconst SearchInput = () => {\n  const [sets, setSets] = useState<DSVRowArray>();\n  const [themes, setThemes] = useState<DSVRowArray>();\n  const [search, setSearch] = useState<string>(\"\");\n  const [result, setResult] = useState<SearchResult>();\n  useEffect(() => {\n    csv(setsData).then((data) => {\n      console.log(data);\n      setSets(data);\n    });\n    csv(themesData).then((data) => {\n      setThemes(data);\n    });\n  }, []);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(event.target.value);\n  };\n\n  const searchLego = (event:FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    if (sets && themes) {\n      let searchIndex = sets.findIndex((row) => row.set_id == search);\n      let setsResult = sets[searchIndex];\n      let themeIndex = themes.findIndex((row) => row.id == setsResult.theme_id);\n      let themesResult = themes[themeIndex];\n      if (themesResult) {\n        setResult({\n          themeName: themesResult.name,\n          set_id: setsResult.set_id,\n          name: setsResult.name,\n          year: setsResult.year,\n          theme_id: setsResult.thene_id,\n          num_parts: setsResult.num_parts,\n        });\n      }\n    }\n  };\n  return (\n    <div>\n      <form onSubmit={searchLego}>\n        <TextField\n          id=\"outlined-basic\"\n          label=\"Search\"\n          variant=\"outlined\"\n          onChange={handleChange}\n        />\n        <Button variant=\"contained\" endIcon={<SearchIcon />} type=\"submit\">\n          Search\n        </Button>\n      </form>\n      <SearchResults searchResults={result}></SearchResults>\n    </div>\n  );\n};\n\nexport default SearchInput;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}